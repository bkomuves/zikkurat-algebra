Cabal-Version:        2.4
Name:                 zikkurat-algebra-pure
Version:              0.0.1
Synopsis:             Pure Haskell implementation of finite fields etc for ZK cryptography

Description:          Pure Haskell implementation of algebraic primitives 
                      (finite fields, elliptic curves and polynomials) used 
                      in zero-knowledge proofs and related subjects.

License:              MIT OR Apache-2.0
License-files:        LICENSE-MIT
                      LICENSE-APACHE-2.0

Author:               Balazs Komuves
Copyright:            (c) 2023 Faulhorn Labs
Maintainer:           balazs.komuves (at) faulhornlabs (dot) com
Homepage:             https://github.com/faulhornlabs/zikkurat-algebra

Stability:            Experimental
Category:             Math, Cryptography
Tested-With:          GHC == 9.6.2
Build-Type:           Simple

--------------------------------------------------------------------------------

source-repository head
  type:                git 
  location:            https://github.com/faulhornlabs/zikkurat-algebra/pure

--------------------------------------------------------------------------------

Library

  Build-Depends:        base >= 4 && < 5, 
                        array >= 0.5,
                        random >= 1.1

  Exposed-Modules:      ZK.Algebra.Pure.Field
                        ZK.Algebra.Pure.Field.Class
                        ZK.Algebra.Pure.Field.SomeFields
                        ZK.Algebra.Pure.Field.Impl.Prime
                        ZK.Algebra.Pure.Field.Impl.Ext
                        ZK.Algebra.Pure.Field.Impl
                        ZK.Algebra.Pure.Field.Sqrt
                        ZK.Algebra.Pure.Curve
                        ZK.Algebra.Pure.Curve.Class
                        ZK.Algebra.Pure.Curve.SomeCurves
                        ZK.Algebra.Pure.Curve.Cubic
                        ZK.Algebra.Pure.Group
                        ZK.Algebra.Pure.Poly
                        ZK.Algebra.Pure.NTT
                        ZK.Algebra.Pure.Jacobi
                        ZK.Algebra.Pure.Misc
                        ZK.Algebra.Pure.Instances.BN254
                        ZK.Algebra.Pure.Instances.BLS12_381
                        ZK.Algebra.Pure.Instances.BLS12_377
                        ZK.Algebra.Pure.Instances.AllFields

  Other-Modules:        ZK.Algebra.Pure.Field.Raw.Generic
                        ZK.Algebra.Pure.Field.Raw.Extension

  Default-Language:     Haskell2010
  Default-Extensions:   BangPatterns

  Hs-Source-Dirs:       src

  ghc-options:          -fwarn-tabs 
                        -fno-warn-unused-matches 
                        -fno-warn-name-shadowing 
                        -fno-warn-unused-imports                        

--------------------------------------------------------------------------------

test-suite tests

  type:                 exitcode-stdio-1.0

  build-depends:        base >= 4 && < 5,
                        zikkurat-algebra-pure

  main-is:              TestMain.hs

  Other-Modules:        Run
                        Field.Properties

  Hs-Source-Dirs:       test

  Default-Language:     Haskell2010

  ghc-options:          -fwarn-tabs 
                        -fno-warn-unused-matches 
                        -fno-warn-name-shadowing 
                        -fno-warn-unused-imports                        

--------------------------------------------------------------------------------

-- cabal sucks, again...
executable zikkurat-algebra-pure-tests

  type:                 exitcode-stdio-1.0

  build-depends:        base >= 4 && < 5,
                        zikkurat-algebra-pure

  main-is:              TestMain.hs

  Other-Modules:        Run
                        Field.Properties

  Hs-Source-Dirs:       test

  Default-Language:     Haskell2010

  ghc-options:          -fwarn-tabs 
                        -fno-warn-unused-matches 
                        -fno-warn-name-shadowing 
                        -fno-warn-unused-imports                        

--------------------------------------------------------------------------------

